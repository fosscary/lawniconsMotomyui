name: Build and Sign Release APK

on:
  workflow_dispatch:
    inputs:
      customTag:
        description: Custom release tag
        type: string
        required: false

jobs:
  build-release-apk:
    runs-on: ubuntu-latest
    steps:
      # ------ 步骤 1: 代码检出 ------
      - name: Check out repository
        uses: actions/checkout@v4
        with:
          submodules: true

      # ------ 步骤 2: 设置 JDK 环境 ------
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: 21

      # ------ 步骤 3: 配置 Gradle 缓存 ------
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4

      # ------ 步骤 4: 生成签名配置（重要修改点） ------
      - name: Setup signing keys
        env:
          KEYSTORE_BASE64: ${{ secrets.ANDROID_KEYSTORE_BASE64 }}  # Base64 编码的 .jks 文件
          KEYSTORE_PASSWORD: ${{ secrets.KEYSTORE_PASSWORD }}
          KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
          KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }}
        run: |
          # 将 Base64 字符串转换为 .jks 文件
          echo "$KEYSTORE_BASE64" | base64 -d > keystore.jks
          
          # 生成 keystore.properties 文件
          echo "storePassword=$KEYSTORE_PASSWORD" > keystore.properties
          echo "keyPassword=$KEY_PASSWORD" >> keystore.properties
          echo "keyAlias=$KEY_ALIAS" >> keystore.properties
          echo "storeFile=keystore.jks" >> keystore.properties

          # 将 keystore 文件移动到安全目录
          mkdir -p app/
          mv keystore.* app/

      # ------ 步骤 5: 构建 APK ------
      - name: Build Release APK
        run: ./gradlew assembleRelease

      # ------ 步骤 6: 验证 APK 文件 ------
      - name: Check APK Exists
        run: ls -l app/build/outputs/apk/release/*.apk

      # ------ 步骤 7: 上传产物 ------
      - name: Upload Release APK
        uses: actions/upload-artifact@v4
        with:
          name: release-apk  # 统一 artifact 名称
          path: app/build/outputs/apk/release/*.apk
